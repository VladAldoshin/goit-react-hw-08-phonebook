{"version":3,"file":"static/js/80.e8a0493c.chunk.js","mappings":"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","sources":["redux/constacts/selectors.js","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","Pages/Contacts/Contacts.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","Pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContactsList = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectContactsFilter = state => state.filters;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.section`\nmargin: auto;\npadding: 30px 0;\nbackground: radial-gradient(circle, #FFD700, #FF6B6B, #3E8AC5);\nborder: 2px solid red; \nborder-radius: 15px; \nbox-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2); \n`;\n\nexport const MainTitle = styled.h2`\nfont-size: 37px;\ntext-align: center;\nposition: relative;\n`;\n\n\n\n\n\n\n\n","import { Container, MainTitle } from './Section.styled';\nimport PropTypes from 'prop-types';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Container>\n      {title && <MainTitle>{title}</MainTitle>}\n      {children}\n    </Container>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\n\n","import styled from '@emotion/styled';\nimport { FaUserPlus } from 'react-icons/fa';\n\nexport const Icon = styled(FaUserPlus)`\n  width: 20px;\n  height: 20px;\n  fill: black;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 10px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: 12px;\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\nwidth: 250px;\npadding: 25px 30px;\ncolor: #000000;\nbackground: #efefef;\nborder-radius: 18px;\nborder: 1px solid #efefef;\n:placeholder {\n  color: #757575;\n}\ntransition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n:hover,\n:focus {\n  border: 1px solid #000000;\n}\n`;\n\nexport const Button = styled.button`\nfont-weight: 600;\nfont-size: 20px;\ndisplay: flex;\nalign-items: center;\ngap: 14px;\nwidth: fit-content;\npadding: 10px;\nmargin-top: 15px;\nmargin-left: 15px;\nmargin-right: 20px;\nbackground-color: whitesmoke;\nborder: 1px solid black;\nborder-radius: 10px;\ncursor: pointer;\ntransition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\ntransition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\ntransition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\ntransition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n:hover,\n:focus {\n  color: red;\n  background-color: black;\n  border: 1px solid #000000;\n  > svg {\n    fill: red;\n  }\n}\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectContactsList } from 'redux/constacts/selectors';\nimport { addContact } from 'redux/constacts/operations';\nimport { Form, Input, Label, Button, Icon } from './ContactForm.styled';\nimport { Notify } from 'notiflix';\nimport PropTypes from 'prop-types';\n\nexport const ContactForm = ({ onCloseModal }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n  \n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const formName = e.target.elements.name.value;\n    const formNumber = e.target.elements.number.value;\n    \n    if (contacts.some(({ name }) => name === formName)) {\n      return alert(`${formName} is already in your contacts.`);\n    }\n\n    if (contacts.some(({ number }) => number === formNumber)) {\n      return alert(`${formNumber} is already in your contacts.`);\n    }\n\n    dispatch(addContact({ name: formName, number: formNumber.toString() }))\n      .unwrap()\n      .then(originalPromiseResult => {\n        Notify.success(\n          `${originalPromiseResult.name}  has been successfully added`\n        );\n      })\n      .catch(() => {\n        Notify.failure(\"Oops something's wrong\");\n      });\n\n    onCloseModal();\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter name\"\n          value={contacts.name}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\"Enter number\"\n          value={contacts.number}\n        />\n      </Label>\n      <Button type=\"submit\">\n        <Icon />\n        New contact\n      </Button>\n    </Form>\n  );\n};\n\nContactForm.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n};\n\n\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-size: 16px;\n  font-weight: 500;\n`;\nexport const Input = styled.input`\nwidth: 250px;\npadding: 25px 30px;\ncolor: #000000;\nbackground: #efefef;\nborder-radius: 18px;\nborder: 1px solid #efefef;\n:placeholder {\n  \n  color: #757575;\n}\ntransition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n:hover,\n:focus {\n  border: 1px solid #000000;\n}\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setContactsFilter } from 'redux/constacts/filtersSlice';\nimport { selectContactsFilter } from 'redux/constacts/selectors';\nimport { Label, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectContactsFilter);\n\n  const onChangeFilter = ({ currentTarget: { value } }) => {\n   dispatch(setContactsFilter(value));\n  };\n\n  return (\n    <Label>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter your contact name\"\n        value={filter}\n        onChange={onChangeFilter}\n      />\n    </Label>\n  );\n};\n","import styled from '@emotion/styled';\nimport { FaUser, FaPhoneAlt, FaUserMinus } from 'react-icons/fa';\n\nexport const UserIcon = styled(FaUser)`\n  padding: 8px;\n  width: 20px;\n  height: 20px;\n  fill: black;\n  border-radius: 50%;\n  background-color: whitesmoke;\n  &:hover,\n  &:focus {\n    background-color: black;\n    fill: red;\n    \n  }\n`;\n\nexport const PhoneIcon = styled(FaPhoneAlt)`\n  padding: 8px;\n  width: 20px;\n  height: 20px;\n  fill: black;\n  border-radius: 50%;\n  background-color: whitesmoke;\n  &:hover,\n  &:focus {\n    background-color: black;\n    fill: red;\n    \n  }\n`;\n\nexport const UserDeletedIcon = styled(FaUserMinus)`\n  width: 50px;\n  height: 20px;\n  fill: black;\n`;\n\nexport const ContactItem = styled.li`\nwidth: 400px;\n  display: flex;\n  flex-direction: center;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 15px;\n  padding: 20px 20px;\n  border-radius: 24px;\n  border: 1px solid rgba(0, 0, 0, 0.04);\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.04);\n`;\n\nexport const ContactName = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  margin: 0;\n  font-weight: 500;\n`;\n\nexport const ContactNumber = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  margin: 0;\n `;\n\nexport const Button = styled.button`\nfont-weight: 600;\nfont-size: 20px;\ndisplay: flex;\nalign-items: center;\ngap: 5px;\nwidth: fit-content;\npadding: 10px;\nbackground-color: whitesmoke;\nborder: 1px solid black;\nborder-radius: 10px;\ncursor: pointer;\ntransition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\ntransition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\ntransition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\ntransition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n:hover,\n:focus {\n  color: red;\n  background-color: black;\n  border: 1px solid #000000;\n  > svg {\n    fill: red;\n  }\n}\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/constacts/operations';\nimport {\n  ContactItem,\n  ContactName,\n  ContactNumber,\n  Button,\n  UserIcon,\n  UserDeletedIcon,\n  PhoneIcon,\n} from './ContactListItem.styled';\nimport { Notify } from 'notiflix';\nimport PropTypes from 'prop-types';\n\nexport const ContactsListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = userId => {\n    dispatch(deleteContact(userId))\n      .unwrap()\n      .then(originalPromiseResult => {\n        Notify.success(\n          `${originalPromiseResult.name} has been deleted successfully`\n        );\n      })\n      .catch(() => {\n        Notify.failure(\"Oops something's wrong\");\n      });\n  };\n\n  return (\n    <ContactItem key={id}>\n      <ContactName>\n        <UserIcon />\n        {name}\n      </ContactName>\n      <ContactNumber>\n        <PhoneIcon />\n        {number}\n      </ContactNumber>\n      <Button onClick={() => handleDeleteContact(id)}>\n        <UserDeletedIcon />\n        Delete\n      </Button>\n    </ContactItem>\n  );\n};\n\nContactsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ContactsList = styled.ul`\n  display: grid;\n  width: 600px;\n  grid-gap: 24px;\n  margin-left: 20px;\n  background: linear-gradient(45deg, #FF6B6B, #3E8AC5);\n  border-radius: 40px;\n  padding: 20px; \n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2); \n`;\n","import { useSelector } from 'react-redux';\nimport {\n  selectContactsFilter,\n  selectContactsList,\n} from 'redux/constacts/selectors';\nimport { ContactsListItem } from '../ContactListItem/ContactListItem';\nimport { ContactsList } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContactsList);\n  const filter = useSelector(selectContactsFilter);\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <>\n      {visibleContacts.length > 0 && (\n        <ContactsList>\n          {visibleContacts.map(({ name, number, id }) => (\n            <ContactsListItem key={id} id={id} name={name} number={number} />\n          ))}\n        </ContactsList>\n      )}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { FaUserPlus } from 'react-icons/fa';\n\nexport const AddUserIcon = styled(FaUserPlus)`\n  width: 20px;\n  height: 20px;\n\n  fill: black;\n`;\nexport const PageContainer = styled.div`\n  padding: 20px 20px;\n  height: 100vh;\n\n \n  background: radial-gradient(circle, #FFD700, #FF6B6B, #3E8AC5);\n`;\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 28px;\n`;\nexport const Title = styled.h2`\nfont-family: 'Rubik Wet Paint', cursive; \n  font-weight: 700;\n  font-size: 50px;\n\n  margin-left: 20px;\n`;\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  margin-left: auto;\n`;\n\nexport const Form = styled.form``;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: 12px;\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\nwidth: 250px;\npadding: 25px 30px;\ncolor: #000000;\nbackground: #efefef;\nborder-radius: 18px;\nborder: 1px solid #efefef;\n:placeholder {\n  color: #757575;\n}\ntransition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n:hover,\n:focus {\n  border: 1px solid #000000;\n}\n`;\n\nexport const Button = styled.button`\n  font-weight: 600;\n  font-size: 20px;\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  width: fit-content;\n  padding: 10px;\n  margin-left: 15px;\n  margin-right: 20px;\n  background-color: whitesmoke;\n  border: 1px solid black;\n  border-radius: 10px;\n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover,\n  :focus {\n    color: red;\n    background-color: black;\n    border: 1px solid #000000;\n    > svg {\n      fill: red;\n    }\n  }\n`;\n\n","import styled from '@emotion/styled';\nimport { FaWindowClose } from 'react-icons/fa';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: linear-gradient(138.13deg, #22343c75 25.87%, #1f2e3572 100%);\n  z-index: 1200;\n`;\n\nexport const ModalContent = styled.div`\nposition: relative;\n  border-radius: 15px;\n  overflow: hidden;\n\n  max-width: calc(100vw - 50px);\n  max-height: calc(100vh - 24px);\n\n  padding-left: 2px;\n  padding-right: 2px;\n  background-color: red;\n`;\n\nexport const CloseIcon = styled(FaWindowClose)`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 20px;\n  color: black;\n  cursor: pointer;\n  transition: color 0.3s ease-in-out;\n\n  &:hover {\n    color: red;\n  }\n`;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { ModalContent, Overlay, CloseIcon } from './Modal.styled';\nimport { FaWindowClose } from 'react-icons/fa';\n\nexport const Modal = ({ children, onCloseModal }) => {\n  const [isModalOpen, setIsModalOpen] = useState(true);\n\n  useEffect(() => {\n    const handleKeydown = e => {\n      if (e.code === 'Escape') {\n        onCloseModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  }, [onCloseModal]);\n\n  const handleBackdropClick = ({ target, currentTarget }) => {\n    if (currentTarget === target) {\n      onCloseModal();\n    }\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    onCloseModal();\n  };\n\n  return (\n    isModalOpen && (\n      <Overlay onClick={handleBackdropClick}>\n        <ModalContent>\n          {children}\n          <CloseIcon onClick={handleCloseModal}>\n            <FaWindowClose />\n          </CloseIcon>\n        </ModalContent>\n      </Overlay>\n    )\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.node,\n  onCloseModal: PropTypes.func,\n};\n\nexport default Modal;\n\n\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/constacts/operations';\nimport { selectError, selectIsLoading } from 'redux/constacts/selectors';\nimport { Section } from '../../components/Section/Section';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport {\n  AddUserIcon,\n  Button,\n  Wrapper,\n  PageContainer,\n  FilterWrapper,\n  Title,\n} from './Contacts.styled';\nimport { Modal } from 'components/Modal/Modal';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const [isShowModalAddUser, setIsShowModalAddUser] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleOpenModal = () => {\n    setIsShowModalAddUser(prev => !prev);\n  };\n\n  return (\n    <PageContainer>\n      <Section>\n        <Wrapper>\n          <Title>Your contacts:</Title>\n          <FilterWrapper>\n            <Filter />\n            <Button type=\"button\" onClick={handleOpenModal}>\n              <AddUserIcon />\n               Add New Contact\n            </Button>\n          </FilterWrapper>\n        </Wrapper>\n        {isLoading && !error && <b>Request in progress</b>}\n        <ContactList />\n      </Section>\n      {isShowModalAddUser && (\n        <Modal\n          children={\n            <Section title=\"Add New Contact\">\n              <ContactForm onCloseModal={handleOpenModal} />\n            </Section>\n          }\n          onCloseModal={handleOpenModal}\n        ></Modal>\n      )}\n    </PageContainer>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContactsList","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectContactsFilter","filters","Container","styled","MainTitle","Section","title","children","Icon","FaUserPlus","Form","Label","Input","Button","ContactForm","onCloseModal","dispatch","useDispatch","useSelector","onSubmit","e","preventDefault","form","target","formName","elements","name","value","formNumber","number","some","alert","addContact","toString","unwrap","then","originalPromiseResult","Notify","catch","reset","autoComplete","type","pattern","required","placeholder","Filter","filter","onChange","currentTarget","setContactsFilter","UserIcon","FaUser","PhoneIcon","FaPhoneAlt","UserDeletedIcon","FaUserMinus","ContactItem","ContactName","ContactNumber","ContactsListItem","id","onClick","userId","deleteContact","ContactsList","ContactList","visibleContacts","contact","toLowerCase","includes","length","map","AddUserIcon","PageContainer","Wrapper","Title","FilterWrapper","Overlay","ModalContent","CloseIcon","FaWindowClose","Modal","useState","isModalOpen","setIsModalOpen","useEffect","handleKeydown","code","window","addEventListener","removeEventListener","isShowModalAddUser","setIsShowModalAddUser","fetchContacts","handleOpenModal","prev"],"sourceRoot":""}